DATABASE | COLLECTS DATA
MongoDB | NoSQL Server (good for small projects)
MERN stands for MongoDB, Express, React, Node

1. New Project & Name it -> mongoosePractice
2. Build Cluster (doesn't matter) -> Google Cloud

Terminology
Collections - A grouping of MongoDB documents. A collection is the equivalent of an RDBMS table. A collection exists within a single database. Collections do not enforce a schema.

genericDatabase
firstCollection

3. CLI Week7 -> mongoosePractice
4. Go to -> https://www.npmjs.com/package/mongoose
5. CLI -> sudo npm install -S mongoose (local copy)
-Or- npm uninstall -g mongoose 

6. VSC -> const mongoose = require("mongoose"); // Type in exact folder name

7. Go to mongoosePractice -> Cluster 0
Click -> connect
Setup IP address -> Step 1 -> Allow Access Anywhere
Allow use of IP anywhere and create a DB user

8. Connect your application -> Node.js
9. Add to VSC mongodb+srv://mongoosePracticeUser:<password>@cluster0.stkey.mongodb.net/<dbname>?retryWrites=true&w=majority
10 Add password to string Add to VSC mongodb+srv://mongoosePracticeUser:<password>ADD PASSWORD@cluster0.stkey.mongodb.net/<dbname>?retryWrites=true&w=majority
10. Add genericDatabase url "mongodb+srv://mongoosePracticeUser:<password>Wiz@3121!@cluster0.stkey.mongodb.net/genericDatabase?retryWrites=true&w=majority";

11. Google DNS Servers -> Mac OS DNS Servers 8.8.8.8 / 4.4.4.4
12. Connect mongoose.connect with Objects
13. Create Schema
14. Note: MongoDB requires collections to end with an "s" and mongoose will add it
15. Mongoose Documentation -> mongoosejs.com

JOURNAL
Mac OS DNS servers was not recognizing? the open IP address. So, step 11 allowed the database to connect to the Network.


SHOW HIDDEN FILES IN MAC ->  CMD + SHIFT + . 

.GITIGNMORE
Use -> git reset to undo git add -A